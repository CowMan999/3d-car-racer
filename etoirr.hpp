#define event_to_irrimgui(e){if(e.EventType==irr::EET_MOUSE_INPUT_EVENT){switch(e.MouseInput.Event){case irr::EMIE_LMOUSE_PRESSED_DOWN:mIsLeftMouseButtonPressed=true;break;case irr::EMIE_LMOUSE_LEFT_UP:mIsLeftMouseButtonPressed=false;break;case irr::EMIE_MMOUSE_PRESSED_DOWN:mIsMiddleMouseButtonPressed=true;break;case irr::EMIE_MMOUSE_LEFT_UP:mIsMiddleMouseButtonPressed=false;break;case irr::EMIE_RMOUSE_PRESSED_DOWN:mIsRightMouseButtonPressed=true;break;case irr::EMIE_RMOUSE_LEFT_UP:mIsRightMouseButtonPressed=false;break;case irr::EMIE_MOUSE_MOVED:mMousePositionX=e.MouseInput.X;mMousePositionY=e.MouseInput.Y;break;case irr::EMIE_MOUSE_WHEEL:mMouseWheelPosition=e.MouseInput.Wheel;break;default:break;}}if(e.EventType==irr::EET_KEY_INPUT_EVENT){bool const IsKeyPressedDown=e.KeyInput.PressedDown;switch(e.KeyInput.Key){case irr::KEY_TAB:mTabPressed=IsKeyPressedDown;break;case irr::KEY_LEFT:mLeftPressed=IsKeyPressedDown;break;case irr::KEY_RIGHT:mRightPressed=IsKeyPressedDown;break;case irr::KEY_UP:mUpPressed=IsKeyPressedDown;break;case irr::KEY_DOWN:mDownPressed=IsKeyPressedDown;break;case irr::KEY_PRIOR:mPriorPressed=IsKeyPressedDown;break;case irr::KEY_NEXT:mNextPressed=IsKeyPressedDown;break;case irr::KEY_HOME:mHomePressed=IsKeyPressedDown;break;case irr::KEY_END:mEndPressed=IsKeyPressedDown;break;case irr::KEY_DELETE:mDeletePressed=IsKeyPressedDown;break;case irr::KEY_BACK:mBackPressed=IsKeyPressedDown;break;case irr::KEY_RETURN:mReturnPressed=IsKeyPressedDown;break;case irr::KEY_ESCAPE:mEscapePressed=IsKeyPressedDown;break;case irr::KEY_KEY_A:mKeyAPressed=IsKeyPressedDown;break;case irr::KEY_KEY_C:mKeyCPressed=IsKeyPressedDown;break;case irr::KEY_KEY_V:mKeyVPressed=IsKeyPressedDown;break;case irr::KEY_KEY_X:mKeyXPressed=IsKeyPressedDown;break;case irr::KEY_KEY_Y:mKeyYPressed=IsKeyPressedDown;break;case irr::KEY_KEY_Z:mKeyZPressed=IsKeyPressedDown;break;case irr::KEY_LSHIFT:case irr::KEY_RSHIFT:case irr::KEY_SHIFT:mShiftPressed=IsKeyPressedDown;break;case irr::KEY_MENU:mAltPressed=IsKeyPressedDown;break;case irr::KEY_LCONTROL:case irr::KEY_RCONTROL:case irr::KEY_CONTROL:mCtrlPressed=IsKeyPressedDown;break;default:break;}if((e.KeyInput.Char>0)&&IsKeyPressedDown){if(!mCharFifo.isFull()){mCharFifo.addChar(e.KeyInput.Char);}}}}